{"version":3,"sources":["pages/Home.jsx","pages/CreatePost.jsx","pages/Post.jsx","pages/Login.jsx","pages/Registration.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","listOfPosts","setListOfPosts","history","useHistory","useEffect","axios","get","then","res","data","map","value","key","className","onClick","push","id","title","postText","username","CreatePost","validationSchema","Yup","shape","required","min","max","initialValues","onSubmit","post","name","component","autoComplete","placeholder","type","Post","useParams","postObject","setPostObject","comments","setComments","newComment","setNewComment","onChange","event","target","getComments","a","commentBody","PostId","headers","accessToken","sessionStorage","getItem","error","alert","console","log","comment","Login","setUsername","password","setPassword","login","setItem","evt","Registration","App","to","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb39a093.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  const [listOfPosts, setListOfPosts] = useState([]);\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    axios.get('/posts').then((res) => {\r\n      setListOfPosts(res.data);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {listOfPosts.map((value, key) => {\r\n        return (\r\n          <div\r\n            key={value.id}\r\n            className=\"post\"\r\n            onClick={() => {\r\n              history.push(`/post/${value.id}`);\r\n            }}\r\n          >\r\n            <div className=\"title\">{value.title} DEPLOYED WITH GITHUB ACTIONS CI/CD</div>\r\n            <div className=\"body\">{value.postText}</div>\r\n            <div className=\"footer\">{value.username}</div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport axios from 'axios';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst CreatePost = () => {\r\n  const initialValues = {\r\n    title: '',\r\n    postText: '',\r\n    username: '',\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    title: Yup.string().required('You must input a Title!'),\r\n    postText: Yup.string().required(),\r\n    username: Yup.string().min(3).max(15).required(),\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    axios.post('/posts', data).then((res) => {\r\n      history.push('/');\r\n    });\r\n  };\r\n\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <div className=\"createPostPage\">\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        <Form className=\"formContainer\">\r\n          <label>Title: </label>\r\n          <ErrorMessage name=\"title\" component=\"span\" />\r\n          <Field\r\n            autoComplete=\"off\"\r\n            id=\"inputCreatePost\"\r\n            name=\"title\"\r\n            placeholder=\"(Ex... Title)\"\r\n          />\r\n          <label>Post: </label>\r\n          <ErrorMessage name=\"postText\" component=\"span\" />\r\n          <Field\r\n            autoComplete=\"off\"\r\n            id=\"inputCreatePost\"\r\n            name=\"postText\"\r\n            placeholder=\"(Ex... Post)\"\r\n          />\r\n          <label>Username: </label>\r\n          <ErrorMessage name=\"username\" component=\"span\" />\r\n          <Field\r\n            autoComplete=\"off\"\r\n            id=\"inputCreatePost\"\r\n            name=\"username\"\r\n            placeholder=\"(Ex... John)\"\r\n          />\r\n          <button type=\"submit\">Create Post</button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Post = () => {\r\n  let { id } = useParams();\r\n  const [postObject, setPostObject] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n\r\n  useEffect(() => {\r\n    axios.get('/posts/byId/' + id).then((res) => {\r\n      setPostObject(res.data);\r\n    });\r\n\r\n    axios.get('/comments/' + id).then((res) => {\r\n      setComments(res.data);\r\n      // console.log(comments);\r\n    });\r\n  }, [id]);\r\n\r\n  const addComment = () => {\r\n    const getComments = async () => {\r\n      const res = await axios.get('/comments/' + id);\r\n      setComments(res.data);\r\n    };\r\n    axios\r\n      .post(\r\n        '/comments/',\r\n        {\r\n          commentBody: newComment,\r\n          PostId: id,\r\n        },\r\n        {\r\n          headers: {\r\n            accessToken: sessionStorage.getItem('accessToken'),\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        if (res.data.error) {\r\n          alert(res.data.error);\r\n          console.log(res.data.error);\r\n        } else {\r\n          getComments();\r\n          setNewComment('');\r\n          console.log('Comment added');\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"postPage\">\r\n      <div className=\"leftSide\">\r\n        <div className=\"post\" id=\"individual\">\r\n          <div className=\"title\">{postObject.title}</div>\r\n          <div className=\"body\">{postObject.postText}</div>\r\n          <div className=\"footer\">{postObject.username}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"rightSide\">\r\n        <div className=\"addCommentContainer\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Comment...\"\r\n            autoComplete=\"off\"\r\n            value={newComment}\r\n            onChange={(event) => {\r\n              setNewComment(event.target.value);\r\n            }}\r\n          />\r\n          <button onClick={addComment}>Add Comment</button>\r\n        </div>\r\n        <div className=\"listOfComments\">\r\n          {comments.map((comment, key) => {\r\n            return (\r\n              <div key={comment.id} className=\"comment\">\r\n                {comment.commentBody}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  let history = useHistory();\r\n\r\n  const login = async () => {\r\n    const data = { username, password };\r\n    const res = await axios.post('/auth/login', data);\r\n    if (res.data.error) alert(res.data.error);\r\n    else {\r\n      sessionStorage.setItem('accessToken', res.data);\r\n      history.push('/');\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"loginContainer\">\r\n      <input type=\"text\" onChange={(evt) => setUsername(evt.target.value)} />\r\n      <input\r\n        type=\"password\"\r\n        onChange={(evt) => setPassword(evt.target.value)}\r\n      />\r\n      <button onClick={login}>Login</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\nconst Registration = () => {\r\n  const initialValues = {\r\n    username: '',\r\n    password: '',\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string().min(3).max(15).required(),\r\n    password: Yup.string().min(4).max(20).required(),\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    axios\r\n      .post('/auth', data)\r\n      .then(data);\r\n  };\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        <Form className=\"formContainer\">\r\n          <label>Username:</label>\r\n          <ErrorMessage name=\"username\" component=\"span\" />\r\n          <Field\r\n            autoComplete=\"off\"\r\n            name=\"username\"\r\n            placeholder=\"(Ex. jon...)\"\r\n            id=\"inputCreatePost\"\r\n          />\r\n          <label>Password:</label>\r\n          <ErrorMessage name=\"password\" component=\"span\" />\r\n          <Field\r\n            id=\"inputCreatePost\"\r\n            type=\"password\"\r\n            autoComplete=\"off\"\r\n            name=\"password\"\r\n            placeholder=\"*******\"\r\n          />\r\n          <button type=\"submit\">Register</button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","import './App.css';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport CreatePost from './pages/CreatePost';\r\nimport Post from './pages/Post';\r\nimport Login from './pages/Login';\r\nimport Registration from './pages/Registration';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <div className=\"navbar\">\r\n          <Link to=\"/\">Home Page </Link>\r\n          <Link to=\"/createpost\">Create a Post</Link>\r\n          <Link to=\"/login\">Login</Link>\r\n          <Link to=\"/registration\">Registration</Link>\r\n        </div>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home}></Route>\r\n          <Route path=\"/createpost\" exact component={CreatePost}></Route>\r\n          <Route path=\"/post/:id\" exact component={Post}></Route>\r\n          <Route path=\"/registration\" exact component={Registration}></Route>\r\n          <Route path=\"/login\" exact component={Login}></Route>\r\n        </Switch>\r\n      </Router>\r\n      Hello from CICD <br />\r\n      version 1.3 push number 3\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}